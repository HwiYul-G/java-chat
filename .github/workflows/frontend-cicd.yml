name: Frontend CI/CD - Build and Deploy React to Azure Web App

env:
  AZURE_WEBAPP_NAME: chat-front-webapp # Azure Web App 이름

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: 'read' # 저장소 내용을 읽는 권한
  packages: 'write' # 도커 이미지를 github package registry에 푸시할 권한

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        working-directory: ./frontend
        run: npm install
      - name: retrieve azure environment variables
        run: |
          echo "REACT_APP_SERVER_HOST=${{ secrets.AZURE_REACT_APP_SERVER_HOST }}" > ./frontend/.env.production
          cat ./frontend/.env.production
          
      - name: build the App
        working-directory: ./frontend
        run: npm run build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: chat-front-webapp
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV} 
      - name: Build and push Docker image to registry
        uses: docker/build-push-action@v5
        with:
          context: ./frontend # frontend 디렉토리에서 Docker 빌드 실행
          push: true
          tags: ghcr.io/${{ env.REPO }}:${{ github.sha }} # GitHub Container Registry에 태그로 푸시
          file: ./frontend/Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: chat-front-webapp
        run: echo "REPO=chat-frontend-webapp" >>${GITHUB_ENV}
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_FRONT_PUBLISH_PROFIEL }} # AZURE 배포 프로필 흠??
          images: 'ghcr.io/${{ env.REPO }}:${{ github.sha }}'
      - name: Prevent push to main branch on deployment failure
        if: ${{ failure() }}
        run: |
          git checkout main
          git revert HEAD --no-edit
          git push origin main